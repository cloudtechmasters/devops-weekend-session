pipeline{
    environment{
        eks_cluster_name = "eksdemo-dev" 
        artifacts_dir = "${env.WORKSPACE}/artifacts"
        aws_region = "${params.aws_region}"
        job_root_dir="${env.WORKSPACE}"
    }
    agent any
    stages{
        stage('Initialize workspace') {
        steps {
        // Make sure the directory is clean
        dir("${artifacts_dir}") {
            deleteDir()
        }
        sh(script: "mkdir -p ${artifacts_dir}", label: 'Create artifacts directory')
        }
        }
        
        stage('git stage'){
                steps{
                    git branch: 'main', url: 'https://github.com/cloudtechmasters/devops-weekend-session.git'
                }
            }
        stage('Generate kubeconfig for the cluster') {
        steps {
        script {
            env.KUBECONFIG = "${artifacts_dir}/${eks_cluster_name}-kubeconfig"
            sh 'chmod +x ${WORKSPACE}/generate_kubeconfig_eks.sh'
        }
        sh(script: '${WORKSPACE}/generate_kubeconfig_eks.sh', label: 'Generate kubeconfig file')
        }
    }
    stage('deploy spring boot app on k8s') {
        steps {
        script {
            sh '''kubectl apply -f springboot-deployment.yml 
                  kubectl apply -f springboot-service.yml
                  kubectl get all
                '''
        }
        }
    }
    }
    post {
	    cleanup {
	          cleanWs(cleanWhenFailure: false)
	    }
    }
}
